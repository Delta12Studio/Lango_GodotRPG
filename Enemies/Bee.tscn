[gd_scene load_steps=23 format=2]

[ext_resource path="res://Enemies/Bee.png" type="Texture" id=1]
[ext_resource path="res://Shadows/SmallShadow.png" type="Texture" id=2]
[ext_resource path="res://Hitboxes and Hurtboxes/HurtBox.tscn" type="PackedScene" id=3]
[ext_resource path="res://Music and Sounds/Bee.ogg" type="AudioStream" id=5]
[ext_resource path="res://Enemies/PlayerDetectionZone.tscn" type="PackedScene" id=6]
[ext_resource path="res://Enemies/WanderController.tscn" type="PackedScene" id=7]
[ext_resource path="res://Enemies/WanderController.gd" type="Script" id=8]
[ext_resource path="res://Hitboxes and Hurtboxes/HitBox.tscn" type="PackedScene" id=9]
[ext_resource path="res://White.shader" type="Shader" id=10]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

const EnemyDeathEffect = preload(\"res://Effects/EnemyDeathEffect.tscn\")
const Drop = preload(\"res://World/Item.tscn\")

var dead = false
var rng = RandomNumberGenerator.new()
var my_number

export var ACCELERATION = 300
export var MAX_SPEED = 50
export var FRICTION = 200
export var WANDER_TARGET_RANGE = 4
export var HEALTH = 3

enum enemy { BEE, BAT }
export(enemy) var enemy_type = enemy.BEE

enum{
	IDLE,
	WANDER,
	CHASE
}

var velocity = Vector2.ZERO
var knockback = Vector2.ZERO

var state = CHASE 

onready var hurtbox = $HurtBox
onready var bar = $Health/Bar
onready var playerDetectionZone = $PlayerDetectionZone
onready var wanderController = $WanderController
onready var sprite = $AnimatedSprite
onready var animationPlayer = $AnimationPlayer

func _ready():
	state = pick_random_state([IDLE, WANDER])

func _physics_process(delta):
	knockback = knockback.move_toward(Vector2.ZERO, FRICTION * delta)
	knockback = move_and_slide(knockback)
	
	match state:
		
		IDLE:
			velocity = velocity.move_toward(Vector2.ZERO, FRICTION * delta)
			seek_player()
			if wanderController.get_time_left() == 0:
				update_wander()
		WANDER:
			seek_player()
			if wanderController.get_time_left() == 0:
				update_wander()
			accelerate_towards_point(wanderController.target_position, delta)
			
			if global_position.distance_to(wanderController.target_position) <= WANDER_TARGET_RANGE:
				update_wander()
		CHASE:
			var player = playerDetectionZone.player
			if player != null:
				accelerate_towards_point(player.global_position, delta)
			else:
				state = IDLE
				
	velocity = move_and_slide(velocity)

func update_wander():
	state = pick_random_state([IDLE, WANDER])
	wanderController.start_wander_timer(rand_range(1, 3))

func accelerate_towards_point(point, delta):
	var direction = global_position.direction_to(point)
	velocity = velocity.move_toward(direction * MAX_SPEED, ACCELERATION * delta)
	sprite.flip_h = velocity.x < 0

func seek_player():
	if playerDetectionZone.can_see_player():
		$AudioStreamPlayer.play()
		$Health.visible = true
		state = CHASE
	else:
		$Health.visible = false

func _on_HurtBox_area_entered(area):
	if HEALTH != 1:
		$AudioStreamPlayer.play()
		bar.rect_size.x = bar.rect_size.x - (bar.rect_size.x / HEALTH)
		HEALTH = HEALTH -1
		knockback = area.knockback_vector * 120
		hurtbox.create_hit_effect()
		hurtbox.start_invincibility(0.4)
	else:
		dead = true
		queue_free()
		var enemyDeathEffect = EnemyDeathEffect.instance()
		get_parent().add_child(enemyDeathEffect)
		enemyDeathEffect.global_position = global_position

func pick_random_state(state_list):
	state_list.shuffle()
	return state_list.pop_front()

func _on_HurtBox_invincibility_started():
	animationPlayer.play(\"Start\")

func _on_HurtBox_invincibility_ended():
	animationPlayer.play(\"Stop\")

func _on_HurtBox_area_exited(_area):
	if dead == true:
		rng.randomize()
		my_number = rng.randi_range(0,10)
		if my_number <= 5:
			pass
		else:
			var drop = Drop.instance()
			if enemy_type == enemy.BEE:
				drop.type = 2
				get_parent().add_child(drop)
				drop.position = position
			elif enemy_type == enemy.BAT:
				drop.type = rng.randi() % 2
				get_parent().add_child(drop)
				drop.position = position
"

[sub_resource type="CircleShape2D" id=2]
radius = 8.14059

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = ExtResource( 10 )
shader_param/active = false

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 16, 24 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 1 )
region = Rect2( 16, 0, 16, 24 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 1 )
region = Rect2( 32, 0, 16, 24 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 1 )
region = Rect2( 48, 0, 16, 24 )

[sub_resource type="SpriteFrames" id=8]
animations = [ {
"frames": [ SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ) ],
"loop": true,
"name": "Bee",
"speed": 12.0
} ]

[sub_resource type="CapsuleShape2D" id=9]
radius = 5.94641
height = 5.32793

[sub_resource type="CircleShape2D" id=10]
radius = 68.8316

[sub_resource type="CircleShape2D" id=11]
radius = 2.49061

[sub_resource type="Animation" id=12]
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:material:shader_param/active")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="Animation" id=13]
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:material:shader_param/active")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[node name="Bee" type="KinematicBody2D"]
collision_layer = 16
collision_mask = 16
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, -15 )
shape = SubResource( 2 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
material = SubResource( 3 )
frames = SubResource( 8 )
animation = "Bee"
frame = 2
playing = true
offset = Vector2( 0, -12 )

[node name="Shadow" type="Sprite" parent="."]
texture = ExtResource( 2 )

[node name="HurtBox" parent="." instance=ExtResource( 3 )]
collision_layer = 8
collision_mask = 0

[node name="CollisionShape2D" parent="HurtBox" index="0"]
position = Vector2( 0, -15 )
shape = SubResource( 9 )

[node name="PlayerDetectionZone" parent="." instance=ExtResource( 6 )]

[node name="CollisionShape2D" parent="PlayerDetectionZone" index="0"]
shape = SubResource( 10 )

[node name="HitBox" parent="." instance=ExtResource( 9 )]
collision_layer = 0
collision_mask = 4

[node name="CollisionShape2D" parent="HitBox" index="0"]
position = Vector2( 0, -15 )
shape = SubResource( 11 )

[node name="WanderController" parent="." instance=ExtResource( 7 )]
script = ExtResource( 8 )

[node name="Timer" type="Timer" parent="WanderController"]
one_shot = true
autostart = true

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )

[node name="Health" type="ColorRect" parent="."]
margin_left = -7.0
margin_top = -27.0
margin_right = 8.0
margin_bottom = -26.0
color = Color( 1, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Bar" type="ColorRect" parent="Health"]
margin_right = 15.0
margin_bottom = 1.0
color = Color( 0, 1, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "Stop"
anims/Start = SubResource( 12 )
anims/Stop = SubResource( 13 )
[connection signal="area_entered" from="HurtBox" to="." method="_on_HurtBox_area_entered"]
[connection signal="area_exited" from="HurtBox" to="." method="_on_HurtBox_area_exited"]
[connection signal="invincibility_ended" from="HurtBox" to="." method="_on_HurtBox_invincibility_ended"]
[connection signal="invincibility_ended" from="HurtBox" to="HurtBox" method="_on_HurtBox_invincibility_ended"]
[connection signal="invincibility_started" from="HurtBox" to="." method="_on_HurtBox_invincibility_started"]
[connection signal="invincibility_started" from="HurtBox" to="HurtBox" method="_on_HurtBox_invincibility_started"]

[editable path="HurtBox"]

[editable path="PlayerDetectionZone"]

[editable path="HitBox"]
